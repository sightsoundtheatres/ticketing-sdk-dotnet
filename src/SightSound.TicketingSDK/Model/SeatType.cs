/*
 * Partner Ticketing API
 *
 * Sight & Sound Theatres Partner Ticketing API
 *
 * The version of the OpenAPI document: 0.0.1-SNAPSHOT
 * Contact: DeveloperTeam@sight-sound.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = SightSound.TicketingSDK.Client.OpenAPIDateConverter;

namespace SightSound.TicketingSDK.Model
{
    /// <summary>
    /// Defines SeatType
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum SeatType
    {
        /// <summary>
        /// Enum A for value: A
        /// </summary>
        [EnumMember(Value = "A")]
        A = 1,

        /// <summary>
        /// Enum C for value: C
        /// </summary>
        [EnumMember(Value = "C")]
        C = 2,

        /// <summary>
        /// Enum D for value: D
        /// </summary>
        [EnumMember(Value = "D")]
        D = 3,

        /// <summary>
        /// Enum F for value: F
        /// </summary>
        [EnumMember(Value = "F")]
        F = 4,

        /// <summary>
        /// Enum H for value: H
        /// </summary>
        [EnumMember(Value = "H")]
        H = 5,

        /// <summary>
        /// Enum I for value: I
        /// </summary>
        [EnumMember(Value = "I")]
        I = 6,

        /// <summary>
        /// Enum M for value: M
        /// </summary>
        [EnumMember(Value = "M")]
        M = 7,

        /// <summary>
        /// Enum S for value: S
        /// </summary>
        [EnumMember(Value = "S")]
        S = 8,

        /// <summary>
        /// Enum T for value: T
        /// </summary>
        [EnumMember(Value = "T")]
        T = 9,

        /// <summary>
        /// Enum V for value: V
        /// </summary>
        [EnumMember(Value = "V")]
        V = 10,

        /// <summary>
        /// Enum W for value: W
        /// </summary>
        [EnumMember(Value = "W")]
        W = 11

    }

}
