/*
 * Partner Ticketing API
 *
 * Sight & Sound Theatres Partner Ticketing API
 *
 * The version of the OpenAPI document: 0.0.1-SNAPSHOT
 * Contact: DeveloperTeam@sight-sound.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = SightSound.TicketingSDK.Client.OpenAPIDateConverter;

namespace SightSound.TicketingSDK.Model
{
    /// <summary>
    /// Defines PricingLevel
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum PricingLevel
    {
        /// <summary>
        /// Enum NOLEVEL for value: NOLEVEL
        /// </summary>
        [EnumMember(Value = "NOLEVEL")]
        NOLEVEL = 1,

        /// <summary>
        /// Enum POSTPAY for value: POSTPAY
        /// </summary>
        [EnumMember(Value = "POSTPAY")]
        POSTPAY = 2,

        /// <summary>
        /// Enum LEVEL1 for value: LEVEL1
        /// </summary>
        [EnumMember(Value = "LEVEL1")]
        LEVEL1 = 3,

        /// <summary>
        /// Enum LEVEL2 for value: LEVEL2
        /// </summary>
        [EnumMember(Value = "LEVEL2")]
        LEVEL2 = 4,

        /// <summary>
        /// Enum LEVEL3 for value: LEVEL3
        /// </summary>
        [EnumMember(Value = "LEVEL3")]
        LEVEL3 = 5,

        /// <summary>
        /// Enum HOT for value: HOT
        /// </summary>
        [EnumMember(Value = "HOT")]
        HOT = 6,

        /// <summary>
        /// Enum RECEPTOR for value: RECEPTOR
        /// </summary>
        [EnumMember(Value = "RECEPTOR")]
        RECEPTOR = 7,

        /// <summary>
        /// Enum RECEPTIVE for value: RECEPTIVE
        /// </summary>
        [EnumMember(Value = "RECEPTIVE")]
        RECEPTIVE = 8,

        /// <summary>
        /// Enum NOTIER for value: NOTIER
        /// </summary>
        [EnumMember(Value = "NOTIER")]
        NOTIER = 9,

        /// <summary>
        /// Enum TIER1 for value: TIER1
        /// </summary>
        [EnumMember(Value = "TIER1")]
        TIER1 = 10,

        /// <summary>
        /// Enum TIER2 for value: TIER2
        /// </summary>
        [EnumMember(Value = "TIER2")]
        TIER2 = 11,

        /// <summary>
        /// Enum TIER3 for value: TIER3
        /// </summary>
        [EnumMember(Value = "TIER3")]
        TIER3 = 12,

        /// <summary>
        /// Enum TIER4 for value: TIER4
        /// </summary>
        [EnumMember(Value = "TIER4")]
        TIER4 = 13

    }

}
