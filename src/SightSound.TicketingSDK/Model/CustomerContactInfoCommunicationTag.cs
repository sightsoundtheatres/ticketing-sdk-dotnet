/*
 * Partner Ticketing API
 *
 * Sight & Sound Theatres Partner Ticketing API
 *
 * The version of the OpenAPI document: 0.0.1-SNAPSHOT
 * Contact: DeveloperTeam@sight-sound.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = SightSound.TicketingSDK.Client.OpenAPIDateConverter;

namespace SightSound.TicketingSDK.Model
{
    /// <summary>
    /// CustomerContactInfoCommunicationTag
    /// </summary>
    [DataContract(Name = "CustomerContactInfoCommunicationTag")]
    public partial class CustomerContactInfoCommunicationTag : IEquatable<CustomerContactInfoCommunicationTag>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CustomerContactInfoCommunicationTag" /> class.
        /// </summary>
        /// <param name="customerNumber">customerNumber.</param>
        /// <param name="contactId">contactId.</param>
        /// <param name="communicationTag">communicationTag.</param>
        public CustomerContactInfoCommunicationTag(long customerNumber = default(long), long contactId = default(long), string communicationTag = default(string))
        {
            this.CustomerNumber = customerNumber;
            this.ContactId = contactId;
            this.CommunicationTag = communicationTag;
        }

        /// <summary>
        /// Gets or Sets CustomerNumber
        /// </summary>
        [DataMember(Name = "customerNumber", EmitDefaultValue = false)]
        public long CustomerNumber { get; set; }

        /// <summary>
        /// Gets or Sets ContactId
        /// </summary>
        [DataMember(Name = "contactId", EmitDefaultValue = false)]
        public long ContactId { get; set; }

        /// <summary>
        /// Gets or Sets CommunicationTag
        /// </summary>
        [DataMember(Name = "communicationTag", EmitDefaultValue = false)]
        public string CommunicationTag { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CustomerContactInfoCommunicationTag {\n");
            sb.Append("  CustomerNumber: ").Append(CustomerNumber).Append("\n");
            sb.Append("  ContactId: ").Append(ContactId).Append("\n");
            sb.Append("  CommunicationTag: ").Append(CommunicationTag).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as CustomerContactInfoCommunicationTag);
        }

        /// <summary>
        /// Returns true if CustomerContactInfoCommunicationTag instances are equal
        /// </summary>
        /// <param name="input">Instance of CustomerContactInfoCommunicationTag to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(CustomerContactInfoCommunicationTag input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.CustomerNumber == input.CustomerNumber ||
                    this.CustomerNumber.Equals(input.CustomerNumber)
                ) && 
                (
                    this.ContactId == input.ContactId ||
                    this.ContactId.Equals(input.ContactId)
                ) && 
                (
                    this.CommunicationTag == input.CommunicationTag ||
                    (this.CommunicationTag != null &&
                    this.CommunicationTag.Equals(input.CommunicationTag))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                hashCode = (hashCode * 59) + this.CustomerNumber.GetHashCode();
                hashCode = (hashCode * 59) + this.ContactId.GetHashCode();
                if (this.CommunicationTag != null)
                {
                    hashCode = (hashCode * 59) + this.CommunicationTag.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
