/*
 * Partner Ticketing API
 *
 * Sight & Sound Theatres Partner Ticketing API
 *
 * The version of the OpenAPI document: 0.0.1-SNAPSHOT
 * Contact: DeveloperTeam@sight-sound.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = SightSound.TicketingSDK.Client.OpenAPIDateConverter;

namespace SightSound.TicketingSDK.Model
{
    /// <summary>
    /// OrderItemDetail
    /// </summary>
    [DataContract(Name = "OrderItemDetail")]
    public partial class OrderItemDetail : IEquatable<OrderItemDetail>, IValidatableObject
    {

        /// <summary>
        /// Gets or Sets DesignationCode
        /// </summary>
        [DataMember(Name = "designationCode", IsRequired = true, EmitDefaultValue = false)]
        public Designation DesignationCode { get; set; }

        /// <summary>
        /// Gets or Sets CustDiscountTypeCode
        /// </summary>
        [DataMember(Name = "custDiscountTypeCode", EmitDefaultValue = false)]
        public DiscountType? CustDiscountTypeCode { get; set; }

        /// <summary>
        /// Gets or Sets SpecialTypeCode
        /// </summary>
        [DataMember(Name = "specialTypeCode", EmitDefaultValue = false)]
        public DiscountType? SpecialTypeCode { get; set; }

        /// <summary>
        /// Gets or Sets ManDiscountTypeCode
        /// </summary>
        [DataMember(Name = "manDiscountTypeCode", EmitDefaultValue = false)]
        public DiscountType? ManDiscountTypeCode { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="OrderItemDetail" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected OrderItemDetail() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="OrderItemDetail" /> class.
        /// </summary>
        /// <param name="orderNumber">orderNumber.</param>
        /// <param name="itemNumber">itemNumber.</param>
        /// <param name="count">count.</param>
        /// <param name="manDiscountCount">manDiscountCount.</param>
        /// <param name="specialDiscountCount">specialDiscountCount.</param>
        /// <param name="designationCode">designationCode (required).</param>
        /// <param name="seatDiscountCount">seatDiscountCount.</param>
        /// <param name="seatDiscountAmount">seatDiscountAmount (required).</param>
        /// <param name="custDiscountTypeCode">custDiscountTypeCode.</param>
        /// <param name="custDiscountValue">custDiscountValue (required).</param>
        /// <param name="specialTypeCode">specialTypeCode.</param>
        /// <param name="specialDiscountValue">specialDiscountValue (required).</param>
        /// <param name="manDiscountTypeCode">manDiscountTypeCode.</param>
        /// <param name="manDiscountValue">manDiscountValue (required).</param>
        /// <param name="confirmedCount">confirmedCount.</param>
        /// <param name="totalPrice">totalPrice.</param>
        /// <param name="specialDiscountTotalAmount">specialDiscountTotalAmount (required).</param>
        /// <param name="manDiscountTotalAmount">manDiscountTotalAmount (required).</param>
        /// <param name="seatDiscountTotalAmount">seatDiscountTotalAmount (required).</param>
        /// <param name="custDiscountTotalAmount">custDiscountTotalAmount (required).</param>
        /// <param name="printedCount">printedCount.</param>
        /// <param name="priceValue">priceValue.</param>
        /// <param name="price">price.</param>
        /// <param name="compCount">compCount.</param>
        /// <param name="gratuity">gratuity.</param>
        /// <param name="ssMargin">ssMargin.</param>
        /// <param name="custDiscountCount">custDiscountCount.</param>
        /// <param name="orderItem">orderItem.</param>
        /// <param name="deltaCount">deltaCount.</param>
        /// <param name="persisted">persisted.</param>
        /// <param name="_new">_new.</param>
        /// <param name="listPriceWithDiscounts">listPriceWithDiscounts.</param>
        /// <param name="totalDiscount">totalDiscount.</param>
        /// <param name="unprintedCount">unprintedCount.</param>
        /// <param name="manDiscountDollarAmount">manDiscountDollarAmount.</param>
        /// <param name="savings">savings.</param>
        /// <param name="totalSavings">totalSavings.</param>
        public OrderItemDetail(long orderNumber = default(long), int itemNumber = default(int), int count = default(int), int manDiscountCount = default(int), int specialDiscountCount = default(int), Designation designationCode = default(Designation), int seatDiscountCount = default(int), decimal seatDiscountAmount = default(decimal), DiscountType? custDiscountTypeCode = default(DiscountType?), decimal custDiscountValue = default(decimal), DiscountType? specialTypeCode = default(DiscountType?), decimal specialDiscountValue = default(decimal), DiscountType? manDiscountTypeCode = default(DiscountType?), decimal manDiscountValue = default(decimal), int confirmedCount = default(int), decimal totalPrice = default(decimal), decimal specialDiscountTotalAmount = default(decimal), decimal manDiscountTotalAmount = default(decimal), decimal seatDiscountTotalAmount = default(decimal), decimal custDiscountTotalAmount = default(decimal), int printedCount = default(int), decimal priceValue = default(decimal), decimal price = default(decimal), int compCount = default(int), decimal gratuity = default(decimal), decimal ssMargin = default(decimal), int custDiscountCount = default(int), OrderItem orderItem = default(OrderItem), int deltaCount = default(int), bool persisted = default(bool), bool _new = default(bool), decimal listPriceWithDiscounts = default(decimal), decimal totalDiscount = default(decimal), int unprintedCount = default(int), decimal manDiscountDollarAmount = default(decimal), decimal savings = default(decimal), decimal totalSavings = default(decimal))
        {
            this.DesignationCode = designationCode;
            this.SeatDiscountAmount = seatDiscountAmount;
            this.CustDiscountValue = custDiscountValue;
            this.SpecialDiscountValue = specialDiscountValue;
            this.ManDiscountValue = manDiscountValue;
            this.SpecialDiscountTotalAmount = specialDiscountTotalAmount;
            this.ManDiscountTotalAmount = manDiscountTotalAmount;
            this.SeatDiscountTotalAmount = seatDiscountTotalAmount;
            this.CustDiscountTotalAmount = custDiscountTotalAmount;
            this.OrderNumber = orderNumber;
            this.ItemNumber = itemNumber;
            this.Count = count;
            this.ManDiscountCount = manDiscountCount;
            this.SpecialDiscountCount = specialDiscountCount;
            this.SeatDiscountCount = seatDiscountCount;
            this.CustDiscountTypeCode = custDiscountTypeCode;
            this.SpecialTypeCode = specialTypeCode;
            this.ManDiscountTypeCode = manDiscountTypeCode;
            this.ConfirmedCount = confirmedCount;
            this.TotalPrice = totalPrice;
            this.PrintedCount = printedCount;
            this.PriceValue = priceValue;
            this.Price = price;
            this.CompCount = compCount;
            this.Gratuity = gratuity;
            this.SsMargin = ssMargin;
            this.CustDiscountCount = custDiscountCount;
            this.OrderItem = orderItem;
            this.DeltaCount = deltaCount;
            this.Persisted = persisted;
            this.New = _new;
            this.ListPriceWithDiscounts = listPriceWithDiscounts;
            this.TotalDiscount = totalDiscount;
            this.UnprintedCount = unprintedCount;
            this.ManDiscountDollarAmount = manDiscountDollarAmount;
            this.Savings = savings;
            this.TotalSavings = totalSavings;
        }

        /// <summary>
        /// Gets or Sets OrderNumber
        /// </summary>
        [DataMember(Name = "orderNumber", EmitDefaultValue = false)]
        public long OrderNumber { get; set; }

        /// <summary>
        /// Gets or Sets ItemNumber
        /// </summary>
        [DataMember(Name = "itemNumber", EmitDefaultValue = false)]
        public int ItemNumber { get; set; }

        /// <summary>
        /// Gets or Sets Count
        /// </summary>
        [DataMember(Name = "count", EmitDefaultValue = false)]
        public int Count { get; set; }

        /// <summary>
        /// Gets or Sets ManDiscountCount
        /// </summary>
        [DataMember(Name = "manDiscountCount", EmitDefaultValue = false)]
        public int ManDiscountCount { get; set; }

        /// <summary>
        /// Gets or Sets SpecialDiscountCount
        /// </summary>
        [DataMember(Name = "specialDiscountCount", EmitDefaultValue = false)]
        public int SpecialDiscountCount { get; set; }

        /// <summary>
        /// Gets or Sets SeatDiscountCount
        /// </summary>
        [DataMember(Name = "seatDiscountCount", EmitDefaultValue = false)]
        public int SeatDiscountCount { get; set; }

        /// <summary>
        /// Gets or Sets SeatDiscountAmount
        /// </summary>
        [DataMember(Name = "seatDiscountAmount", IsRequired = true, EmitDefaultValue = false)]
        public decimal SeatDiscountAmount { get; set; }

        /// <summary>
        /// Gets or Sets CustDiscountValue
        /// </summary>
        [DataMember(Name = "custDiscountValue", IsRequired = true, EmitDefaultValue = false)]
        public decimal CustDiscountValue { get; set; }

        /// <summary>
        /// Gets or Sets SpecialDiscountValue
        /// </summary>
        [DataMember(Name = "specialDiscountValue", IsRequired = true, EmitDefaultValue = false)]
        public decimal SpecialDiscountValue { get; set; }

        /// <summary>
        /// Gets or Sets ManDiscountValue
        /// </summary>
        [DataMember(Name = "manDiscountValue", IsRequired = true, EmitDefaultValue = false)]
        public decimal ManDiscountValue { get; set; }

        /// <summary>
        /// Gets or Sets ConfirmedCount
        /// </summary>
        [DataMember(Name = "confirmedCount", EmitDefaultValue = false)]
        public int ConfirmedCount { get; set; }

        /// <summary>
        /// Gets or Sets TotalPrice
        /// </summary>
        [DataMember(Name = "totalPrice", EmitDefaultValue = false)]
        public decimal TotalPrice { get; set; }

        /// <summary>
        /// Gets or Sets SpecialDiscountTotalAmount
        /// </summary>
        [DataMember(Name = "specialDiscountTotalAmount", IsRequired = true, EmitDefaultValue = false)]
        public decimal SpecialDiscountTotalAmount { get; set; }

        /// <summary>
        /// Gets or Sets ManDiscountTotalAmount
        /// </summary>
        [DataMember(Name = "manDiscountTotalAmount", IsRequired = true, EmitDefaultValue = false)]
        public decimal ManDiscountTotalAmount { get; set; }

        /// <summary>
        /// Gets or Sets SeatDiscountTotalAmount
        /// </summary>
        [DataMember(Name = "seatDiscountTotalAmount", IsRequired = true, EmitDefaultValue = false)]
        public decimal SeatDiscountTotalAmount { get; set; }

        /// <summary>
        /// Gets or Sets CustDiscountTotalAmount
        /// </summary>
        [DataMember(Name = "custDiscountTotalAmount", IsRequired = true, EmitDefaultValue = false)]
        public decimal CustDiscountTotalAmount { get; set; }

        /// <summary>
        /// Gets or Sets PrintedCount
        /// </summary>
        [DataMember(Name = "printedCount", EmitDefaultValue = false)]
        public int PrintedCount { get; set; }

        /// <summary>
        /// Gets or Sets PriceValue
        /// </summary>
        [DataMember(Name = "priceValue", EmitDefaultValue = false)]
        public decimal PriceValue { get; set; }

        /// <summary>
        /// Gets or Sets Price
        /// </summary>
        [DataMember(Name = "price", EmitDefaultValue = false)]
        public decimal Price { get; set; }

        /// <summary>
        /// Gets or Sets CompCount
        /// </summary>
        [DataMember(Name = "compCount", EmitDefaultValue = false)]
        public int CompCount { get; set; }

        /// <summary>
        /// Gets or Sets Gratuity
        /// </summary>
        [DataMember(Name = "gratuity", EmitDefaultValue = false)]
        public decimal Gratuity { get; set; }

        /// <summary>
        /// Gets or Sets SsMargin
        /// </summary>
        [DataMember(Name = "ssMargin", EmitDefaultValue = false)]
        public decimal SsMargin { get; set; }

        /// <summary>
        /// Gets or Sets CustDiscountCount
        /// </summary>
        [DataMember(Name = "custDiscountCount", EmitDefaultValue = false)]
        public int CustDiscountCount { get; set; }

        /// <summary>
        /// Gets or Sets OrderItem
        /// </summary>
        [DataMember(Name = "orderItem", EmitDefaultValue = false)]
        public OrderItem OrderItem { get; set; }

        /// <summary>
        /// Gets or Sets DeltaCount
        /// </summary>
        [DataMember(Name = "deltaCount", EmitDefaultValue = false)]
        public int DeltaCount { get; set; }

        /// <summary>
        /// Gets or Sets Persisted
        /// </summary>
        [DataMember(Name = "persisted", EmitDefaultValue = true)]
        public bool Persisted { get; set; }

        /// <summary>
        /// Gets or Sets New
        /// </summary>
        [DataMember(Name = "new", EmitDefaultValue = true)]
        public bool New { get; set; }

        /// <summary>
        /// Gets or Sets ListPriceWithDiscounts
        /// </summary>
        [DataMember(Name = "listPriceWithDiscounts", EmitDefaultValue = false)]
        public decimal ListPriceWithDiscounts { get; set; }

        /// <summary>
        /// Gets or Sets TotalDiscount
        /// </summary>
        [DataMember(Name = "totalDiscount", EmitDefaultValue = false)]
        public decimal TotalDiscount { get; set; }

        /// <summary>
        /// Gets or Sets UnprintedCount
        /// </summary>
        [DataMember(Name = "unprintedCount", EmitDefaultValue = false)]
        public int UnprintedCount { get; set; }

        /// <summary>
        /// Gets or Sets ManDiscountDollarAmount
        /// </summary>
        [DataMember(Name = "manDiscountDollarAmount", EmitDefaultValue = false)]
        public decimal ManDiscountDollarAmount { get; set; }

        /// <summary>
        /// Gets or Sets Savings
        /// </summary>
        [DataMember(Name = "savings", EmitDefaultValue = false)]
        public decimal Savings { get; set; }

        /// <summary>
        /// Gets or Sets TotalSavings
        /// </summary>
        [DataMember(Name = "totalSavings", EmitDefaultValue = false)]
        public decimal TotalSavings { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class OrderItemDetail {\n");
            sb.Append("  OrderNumber: ").Append(OrderNumber).Append("\n");
            sb.Append("  ItemNumber: ").Append(ItemNumber).Append("\n");
            sb.Append("  Count: ").Append(Count).Append("\n");
            sb.Append("  ManDiscountCount: ").Append(ManDiscountCount).Append("\n");
            sb.Append("  SpecialDiscountCount: ").Append(SpecialDiscountCount).Append("\n");
            sb.Append("  DesignationCode: ").Append(DesignationCode).Append("\n");
            sb.Append("  SeatDiscountCount: ").Append(SeatDiscountCount).Append("\n");
            sb.Append("  SeatDiscountAmount: ").Append(SeatDiscountAmount).Append("\n");
            sb.Append("  CustDiscountTypeCode: ").Append(CustDiscountTypeCode).Append("\n");
            sb.Append("  CustDiscountValue: ").Append(CustDiscountValue).Append("\n");
            sb.Append("  SpecialTypeCode: ").Append(SpecialTypeCode).Append("\n");
            sb.Append("  SpecialDiscountValue: ").Append(SpecialDiscountValue).Append("\n");
            sb.Append("  ManDiscountTypeCode: ").Append(ManDiscountTypeCode).Append("\n");
            sb.Append("  ManDiscountValue: ").Append(ManDiscountValue).Append("\n");
            sb.Append("  ConfirmedCount: ").Append(ConfirmedCount).Append("\n");
            sb.Append("  TotalPrice: ").Append(TotalPrice).Append("\n");
            sb.Append("  SpecialDiscountTotalAmount: ").Append(SpecialDiscountTotalAmount).Append("\n");
            sb.Append("  ManDiscountTotalAmount: ").Append(ManDiscountTotalAmount).Append("\n");
            sb.Append("  SeatDiscountTotalAmount: ").Append(SeatDiscountTotalAmount).Append("\n");
            sb.Append("  CustDiscountTotalAmount: ").Append(CustDiscountTotalAmount).Append("\n");
            sb.Append("  PrintedCount: ").Append(PrintedCount).Append("\n");
            sb.Append("  PriceValue: ").Append(PriceValue).Append("\n");
            sb.Append("  Price: ").Append(Price).Append("\n");
            sb.Append("  CompCount: ").Append(CompCount).Append("\n");
            sb.Append("  Gratuity: ").Append(Gratuity).Append("\n");
            sb.Append("  SsMargin: ").Append(SsMargin).Append("\n");
            sb.Append("  CustDiscountCount: ").Append(CustDiscountCount).Append("\n");
            sb.Append("  OrderItem: ").Append(OrderItem).Append("\n");
            sb.Append("  DeltaCount: ").Append(DeltaCount).Append("\n");
            sb.Append("  Persisted: ").Append(Persisted).Append("\n");
            sb.Append("  New: ").Append(New).Append("\n");
            sb.Append("  ListPriceWithDiscounts: ").Append(ListPriceWithDiscounts).Append("\n");
            sb.Append("  TotalDiscount: ").Append(TotalDiscount).Append("\n");
            sb.Append("  UnprintedCount: ").Append(UnprintedCount).Append("\n");
            sb.Append("  ManDiscountDollarAmount: ").Append(ManDiscountDollarAmount).Append("\n");
            sb.Append("  Savings: ").Append(Savings).Append("\n");
            sb.Append("  TotalSavings: ").Append(TotalSavings).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as OrderItemDetail);
        }

        /// <summary>
        /// Returns true if OrderItemDetail instances are equal
        /// </summary>
        /// <param name="input">Instance of OrderItemDetail to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(OrderItemDetail input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.OrderNumber == input.OrderNumber ||
                    this.OrderNumber.Equals(input.OrderNumber)
                ) && 
                (
                    this.ItemNumber == input.ItemNumber ||
                    this.ItemNumber.Equals(input.ItemNumber)
                ) && 
                (
                    this.Count == input.Count ||
                    this.Count.Equals(input.Count)
                ) && 
                (
                    this.ManDiscountCount == input.ManDiscountCount ||
                    this.ManDiscountCount.Equals(input.ManDiscountCount)
                ) && 
                (
                    this.SpecialDiscountCount == input.SpecialDiscountCount ||
                    this.SpecialDiscountCount.Equals(input.SpecialDiscountCount)
                ) && 
                (
                    this.DesignationCode == input.DesignationCode ||
                    this.DesignationCode.Equals(input.DesignationCode)
                ) && 
                (
                    this.SeatDiscountCount == input.SeatDiscountCount ||
                    this.SeatDiscountCount.Equals(input.SeatDiscountCount)
                ) && 
                (
                    this.SeatDiscountAmount == input.SeatDiscountAmount ||
                    this.SeatDiscountAmount.Equals(input.SeatDiscountAmount)
                ) && 
                (
                    this.CustDiscountTypeCode == input.CustDiscountTypeCode ||
                    this.CustDiscountTypeCode.Equals(input.CustDiscountTypeCode)
                ) && 
                (
                    this.CustDiscountValue == input.CustDiscountValue ||
                    this.CustDiscountValue.Equals(input.CustDiscountValue)
                ) && 
                (
                    this.SpecialTypeCode == input.SpecialTypeCode ||
                    this.SpecialTypeCode.Equals(input.SpecialTypeCode)
                ) && 
                (
                    this.SpecialDiscountValue == input.SpecialDiscountValue ||
                    this.SpecialDiscountValue.Equals(input.SpecialDiscountValue)
                ) && 
                (
                    this.ManDiscountTypeCode == input.ManDiscountTypeCode ||
                    this.ManDiscountTypeCode.Equals(input.ManDiscountTypeCode)
                ) && 
                (
                    this.ManDiscountValue == input.ManDiscountValue ||
                    this.ManDiscountValue.Equals(input.ManDiscountValue)
                ) && 
                (
                    this.ConfirmedCount == input.ConfirmedCount ||
                    this.ConfirmedCount.Equals(input.ConfirmedCount)
                ) && 
                (
                    this.TotalPrice == input.TotalPrice ||
                    this.TotalPrice.Equals(input.TotalPrice)
                ) && 
                (
                    this.SpecialDiscountTotalAmount == input.SpecialDiscountTotalAmount ||
                    this.SpecialDiscountTotalAmount.Equals(input.SpecialDiscountTotalAmount)
                ) && 
                (
                    this.ManDiscountTotalAmount == input.ManDiscountTotalAmount ||
                    this.ManDiscountTotalAmount.Equals(input.ManDiscountTotalAmount)
                ) && 
                (
                    this.SeatDiscountTotalAmount == input.SeatDiscountTotalAmount ||
                    this.SeatDiscountTotalAmount.Equals(input.SeatDiscountTotalAmount)
                ) && 
                (
                    this.CustDiscountTotalAmount == input.CustDiscountTotalAmount ||
                    this.CustDiscountTotalAmount.Equals(input.CustDiscountTotalAmount)
                ) && 
                (
                    this.PrintedCount == input.PrintedCount ||
                    this.PrintedCount.Equals(input.PrintedCount)
                ) && 
                (
                    this.PriceValue == input.PriceValue ||
                    this.PriceValue.Equals(input.PriceValue)
                ) && 
                (
                    this.Price == input.Price ||
                    this.Price.Equals(input.Price)
                ) && 
                (
                    this.CompCount == input.CompCount ||
                    this.CompCount.Equals(input.CompCount)
                ) && 
                (
                    this.Gratuity == input.Gratuity ||
                    this.Gratuity.Equals(input.Gratuity)
                ) && 
                (
                    this.SsMargin == input.SsMargin ||
                    this.SsMargin.Equals(input.SsMargin)
                ) && 
                (
                    this.CustDiscountCount == input.CustDiscountCount ||
                    this.CustDiscountCount.Equals(input.CustDiscountCount)
                ) && 
                (
                    this.OrderItem == input.OrderItem ||
                    (this.OrderItem != null &&
                    this.OrderItem.Equals(input.OrderItem))
                ) && 
                (
                    this.DeltaCount == input.DeltaCount ||
                    this.DeltaCount.Equals(input.DeltaCount)
                ) && 
                (
                    this.Persisted == input.Persisted ||
                    this.Persisted.Equals(input.Persisted)
                ) && 
                (
                    this.New == input.New ||
                    this.New.Equals(input.New)
                ) && 
                (
                    this.ListPriceWithDiscounts == input.ListPriceWithDiscounts ||
                    this.ListPriceWithDiscounts.Equals(input.ListPriceWithDiscounts)
                ) && 
                (
                    this.TotalDiscount == input.TotalDiscount ||
                    this.TotalDiscount.Equals(input.TotalDiscount)
                ) && 
                (
                    this.UnprintedCount == input.UnprintedCount ||
                    this.UnprintedCount.Equals(input.UnprintedCount)
                ) && 
                (
                    this.ManDiscountDollarAmount == input.ManDiscountDollarAmount ||
                    this.ManDiscountDollarAmount.Equals(input.ManDiscountDollarAmount)
                ) && 
                (
                    this.Savings == input.Savings ||
                    this.Savings.Equals(input.Savings)
                ) && 
                (
                    this.TotalSavings == input.TotalSavings ||
                    this.TotalSavings.Equals(input.TotalSavings)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                hashCode = (hashCode * 59) + this.OrderNumber.GetHashCode();
                hashCode = (hashCode * 59) + this.ItemNumber.GetHashCode();
                hashCode = (hashCode * 59) + this.Count.GetHashCode();
                hashCode = (hashCode * 59) + this.ManDiscountCount.GetHashCode();
                hashCode = (hashCode * 59) + this.SpecialDiscountCount.GetHashCode();
                hashCode = (hashCode * 59) + this.DesignationCode.GetHashCode();
                hashCode = (hashCode * 59) + this.SeatDiscountCount.GetHashCode();
                hashCode = (hashCode * 59) + this.SeatDiscountAmount.GetHashCode();
                hashCode = (hashCode * 59) + this.CustDiscountTypeCode.GetHashCode();
                hashCode = (hashCode * 59) + this.CustDiscountValue.GetHashCode();
                hashCode = (hashCode * 59) + this.SpecialTypeCode.GetHashCode();
                hashCode = (hashCode * 59) + this.SpecialDiscountValue.GetHashCode();
                hashCode = (hashCode * 59) + this.ManDiscountTypeCode.GetHashCode();
                hashCode = (hashCode * 59) + this.ManDiscountValue.GetHashCode();
                hashCode = (hashCode * 59) + this.ConfirmedCount.GetHashCode();
                hashCode = (hashCode * 59) + this.TotalPrice.GetHashCode();
                hashCode = (hashCode * 59) + this.SpecialDiscountTotalAmount.GetHashCode();
                hashCode = (hashCode * 59) + this.ManDiscountTotalAmount.GetHashCode();
                hashCode = (hashCode * 59) + this.SeatDiscountTotalAmount.GetHashCode();
                hashCode = (hashCode * 59) + this.CustDiscountTotalAmount.GetHashCode();
                hashCode = (hashCode * 59) + this.PrintedCount.GetHashCode();
                hashCode = (hashCode * 59) + this.PriceValue.GetHashCode();
                hashCode = (hashCode * 59) + this.Price.GetHashCode();
                hashCode = (hashCode * 59) + this.CompCount.GetHashCode();
                hashCode = (hashCode * 59) + this.Gratuity.GetHashCode();
                hashCode = (hashCode * 59) + this.SsMargin.GetHashCode();
                hashCode = (hashCode * 59) + this.CustDiscountCount.GetHashCode();
                if (this.OrderItem != null)
                {
                    hashCode = (hashCode * 59) + this.OrderItem.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.DeltaCount.GetHashCode();
                hashCode = (hashCode * 59) + this.Persisted.GetHashCode();
                hashCode = (hashCode * 59) + this.New.GetHashCode();
                hashCode = (hashCode * 59) + this.ListPriceWithDiscounts.GetHashCode();
                hashCode = (hashCode * 59) + this.TotalDiscount.GetHashCode();
                hashCode = (hashCode * 59) + this.UnprintedCount.GetHashCode();
                hashCode = (hashCode * 59) + this.ManDiscountDollarAmount.GetHashCode();
                hashCode = (hashCode * 59) + this.Savings.GetHashCode();
                hashCode = (hashCode * 59) + this.TotalSavings.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
