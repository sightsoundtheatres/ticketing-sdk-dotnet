/*
 * Partner Ticketing API
 *
 * Sight & Sound Theatres Partner Ticketing API
 *
 * The version of the OpenAPI document: 0.0.1-SNAPSHOT
 * Contact: DeveloperTeam@sight-sound.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using SightSound.TicketingSDK.Api;
using SightSound.TicketingSDK.Model;
using SightSound.TicketingSDK.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace SightSound.TicketingSDK.Test.Model
{
    /// <summary>
    ///  Class for testing SDKEphemPubKey
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class SDKEphemPubKeyTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for SDKEphemPubKey
        //private SDKEphemPubKey instance;

        public SDKEphemPubKeyTests()
        {
            // TODO uncomment below to create an instance of SDKEphemPubKey
            //instance = new SDKEphemPubKey();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of SDKEphemPubKey
        /// </summary>
        [Fact]
        public void SDKEphemPubKeyInstanceTest()
        {
            // TODO uncomment below to test "IsType" SDKEphemPubKey
            //Assert.IsType<SDKEphemPubKey>(instance);
        }


        /// <summary>
        /// Test the property 'Crv'
        /// </summary>
        [Fact]
        public void CrvTest()
        {
            // TODO unit test for the property 'Crv'
        }
        /// <summary>
        /// Test the property 'Kty'
        /// </summary>
        [Fact]
        public void KtyTest()
        {
            // TODO unit test for the property 'Kty'
        }
        /// <summary>
        /// Test the property 'X'
        /// </summary>
        [Fact]
        public void XTest()
        {
            // TODO unit test for the property 'X'
        }
        /// <summary>
        /// Test the property 'Y'
        /// </summary>
        [Fact]
        public void YTest()
        {
            // TODO unit test for the property 'Y'
        }

    }

}
